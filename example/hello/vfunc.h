#ifndef HELLO_VFUNC_H_
#define HELLO_VFUNC_H_

#include <stdint.h>

#define VFUNC_DECLARE(num) \
	virtual uint32_t callback##num(uint32_t a, uint32_t n) = 0

#define VFUNC_DECLARE_OVERRIDE(num) \
	virtual uint32_t callback##num(uint32_t a, uint32_t n) override

class VFuncBase {
public:
	virtual ~VFuncBase()
	{
	}

	VFUNC_DECLARE(0);
	VFUNC_DECLARE(1);
	VFUNC_DECLARE(2);
	VFUNC_DECLARE(3);
	VFUNC_DECLARE(4);
	VFUNC_DECLARE(5);
	VFUNC_DECLARE(6);
	VFUNC_DECLARE(7);
	VFUNC_DECLARE(8);
	VFUNC_DECLARE(9);

	VFUNC_DECLARE(10);
	VFUNC_DECLARE(11);
	VFUNC_DECLARE(12);
	VFUNC_DECLARE(13);
	VFUNC_DECLARE(14);
	VFUNC_DECLARE(15);
	VFUNC_DECLARE(16);
	VFUNC_DECLARE(17);
	VFUNC_DECLARE(18);
	VFUNC_DECLARE(19);

	VFUNC_DECLARE(20);
	VFUNC_DECLARE(21);
	VFUNC_DECLARE(22);
	VFUNC_DECLARE(23);
	VFUNC_DECLARE(24);
	VFUNC_DECLARE(25);
	VFUNC_DECLARE(26);
	VFUNC_DECLARE(27);
	VFUNC_DECLARE(28);
	VFUNC_DECLARE(29);

	VFUNC_DECLARE(30);
	VFUNC_DECLARE(31);
	VFUNC_DECLARE(32);
	VFUNC_DECLARE(33);
	VFUNC_DECLARE(34);
	VFUNC_DECLARE(35);
	VFUNC_DECLARE(36);
	VFUNC_DECLARE(37);
	VFUNC_DECLARE(38);
	VFUNC_DECLARE(39);

	VFUNC_DECLARE(40);
	VFUNC_DECLARE(41);
	VFUNC_DECLARE(42);
	VFUNC_DECLARE(43);
	VFUNC_DECLARE(44);
	VFUNC_DECLARE(45);
	VFUNC_DECLARE(46);
	VFUNC_DECLARE(47);
	VFUNC_DECLARE(48);
	VFUNC_DECLARE(49);
};

class VFuncImpl : public VFuncBase {
	VFUNC_DECLARE_OVERRIDE(0);
	VFUNC_DECLARE_OVERRIDE(1);
	VFUNC_DECLARE_OVERRIDE(2);
	VFUNC_DECLARE_OVERRIDE(3);
	VFUNC_DECLARE_OVERRIDE(4);
	VFUNC_DECLARE_OVERRIDE(5);
	VFUNC_DECLARE_OVERRIDE(6);
	VFUNC_DECLARE_OVERRIDE(7);
	VFUNC_DECLARE_OVERRIDE(8);
	VFUNC_DECLARE_OVERRIDE(9);

	VFUNC_DECLARE_OVERRIDE(10);
	VFUNC_DECLARE_OVERRIDE(11);
	VFUNC_DECLARE_OVERRIDE(12);
	VFUNC_DECLARE_OVERRIDE(13);
	VFUNC_DECLARE_OVERRIDE(14);
	VFUNC_DECLARE_OVERRIDE(15);
	VFUNC_DECLARE_OVERRIDE(16);
	VFUNC_DECLARE_OVERRIDE(17);
	VFUNC_DECLARE_OVERRIDE(18);
	VFUNC_DECLARE_OVERRIDE(19);

	VFUNC_DECLARE_OVERRIDE(20);
	VFUNC_DECLARE_OVERRIDE(21);
	VFUNC_DECLARE_OVERRIDE(22);
	VFUNC_DECLARE_OVERRIDE(23);
	VFUNC_DECLARE_OVERRIDE(24);
	VFUNC_DECLARE_OVERRIDE(25);
	VFUNC_DECLARE_OVERRIDE(26);
	VFUNC_DECLARE_OVERRIDE(27);
	VFUNC_DECLARE_OVERRIDE(28);
	VFUNC_DECLARE_OVERRIDE(29);

	VFUNC_DECLARE_OVERRIDE(30);
	VFUNC_DECLARE_OVERRIDE(31);
	VFUNC_DECLARE_OVERRIDE(32);
	VFUNC_DECLARE_OVERRIDE(33);
	VFUNC_DECLARE_OVERRIDE(34);
	VFUNC_DECLARE_OVERRIDE(35);
	VFUNC_DECLARE_OVERRIDE(36);
	VFUNC_DECLARE_OVERRIDE(37);
	VFUNC_DECLARE_OVERRIDE(38);
	VFUNC_DECLARE_OVERRIDE(39);

	VFUNC_DECLARE_OVERRIDE(40);
	VFUNC_DECLARE_OVERRIDE(41);
	VFUNC_DECLARE_OVERRIDE(42);
	VFUNC_DECLARE_OVERRIDE(43);
	VFUNC_DECLARE_OVERRIDE(44);
	VFUNC_DECLARE_OVERRIDE(45);
	VFUNC_DECLARE_OVERRIDE(46);
	VFUNC_DECLARE_OVERRIDE(47);
	VFUNC_DECLARE_OVERRIDE(48);
	VFUNC_DECLARE_OVERRIDE(49);
};

#define VFUNC_CALL_DECLARE(num) \
	uint32_t vfunc_call##num(VFuncBase *vfunc, uint32_t a, uint32_t n);

typedef uint32_t (*vfnCallback)(VFuncBase *vfunc, uint32_t a, uint32_t n);

VFUNC_CALL_DECLARE(0);
VFUNC_CALL_DECLARE(1);
VFUNC_CALL_DECLARE(2);
VFUNC_CALL_DECLARE(3);
VFUNC_CALL_DECLARE(4);
VFUNC_CALL_DECLARE(5);
VFUNC_CALL_DECLARE(6);
VFUNC_CALL_DECLARE(7);
VFUNC_CALL_DECLARE(8);
VFUNC_CALL_DECLARE(9);

VFUNC_CALL_DECLARE(10);
VFUNC_CALL_DECLARE(11);
VFUNC_CALL_DECLARE(12);
VFUNC_CALL_DECLARE(13);
VFUNC_CALL_DECLARE(14);
VFUNC_CALL_DECLARE(15);
VFUNC_CALL_DECLARE(16);
VFUNC_CALL_DECLARE(17);
VFUNC_CALL_DECLARE(18);
VFUNC_CALL_DECLARE(19);

VFUNC_CALL_DECLARE(20);
VFUNC_CALL_DECLARE(21);
VFUNC_CALL_DECLARE(22);
VFUNC_CALL_DECLARE(23);
VFUNC_CALL_DECLARE(24);
VFUNC_CALL_DECLARE(25);
VFUNC_CALL_DECLARE(26);
VFUNC_CALL_DECLARE(27);
VFUNC_CALL_DECLARE(28);
VFUNC_CALL_DECLARE(29);

VFUNC_CALL_DECLARE(30);
VFUNC_CALL_DECLARE(31);
VFUNC_CALL_DECLARE(32);
VFUNC_CALL_DECLARE(33);
VFUNC_CALL_DECLARE(34);
VFUNC_CALL_DECLARE(35);
VFUNC_CALL_DECLARE(36);
VFUNC_CALL_DECLARE(37);
VFUNC_CALL_DECLARE(38);
VFUNC_CALL_DECLARE(39);

VFUNC_CALL_DECLARE(40);
VFUNC_CALL_DECLARE(41);
VFUNC_CALL_DECLARE(42);
VFUNC_CALL_DECLARE(43);
VFUNC_CALL_DECLARE(44);
VFUNC_CALL_DECLARE(45);
VFUNC_CALL_DECLARE(46);
VFUNC_CALL_DECLARE(47);
VFUNC_CALL_DECLARE(48);
VFUNC_CALL_DECLARE(49);

#endif // !HELLO_VFUNC_H_
